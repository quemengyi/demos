{
  "status": 200,
  "data": [
    {
      "id": 1,
      "lis": "知识",
      "title": "IT篇@计算机基础",
      "author": "Elaine",
      "html": "<h3 class='h3'>一、计算机组成原理</h3><p class='p'>计算机主要由硬件和软件组成。</p><p class='p'><b>硬件五大组成部分：</b></p><p class='p'>1、控制器：计算机的指挥系统。控制器通过地址访问存储器，从存储器中取出指令，经译码器分析后，根据指令分析结果产生相应的操作控制信号作用于其他部件，使得各部件在控制器控制下有条不紊地协调工作。</p><p class='p'>2、运算器：实现算术运算和逻辑运算的部件。</p><p class='p'>3、存储器：是计算机用来存放所有数据和程序的记忆部件。它的基本功能是按指定的地址存（写）入或者取（读）出信息。计算机中的存储器可分成两大类：一类是内存储器，简称内存或主存；另一类是外存储器（辅助存储器），简称外存或辅存。存储器由若干个存储单元组成，每个存储单元都有一个地址，计算机通过地址对存储单元进行读写。一个存储器所包含的字节数称为存储容量，单位有B、KB、MB、GB、TB等。</p><p class='p'>4、输入设备：是向计算机中输入信息（程序、数据、声音、文字、图形、图像等）的设备。常见的输入设备有：键盘、鼠标、图形扫描仪、触摸屏、条形码输入器、光笔等。外存储器也是一种输入设备。 </p><p class='p'>5、输出设备：主要有显示器、打印机和绘图仪等。外存储器也当作一种输出设备。</p><p class='p'><b>三大核心硬件：</b></p><p class='p'>1、控制单元+算数逻辑单元=&gt;CPU</p><p class='p'>2、主存储器，即内存</p><p class='p'>3、输入单元Input+输出单元Output=&gt;IO设备</p><p class='p'>计算机软件：指能指挥计算机工作的顺序与程序运行时所需要的数据，以及与这些程序和数据有关的文字说明和图表资料，其中文字说明和图表资料又称文档。</p><h3 class='h3'>二、计算机操作系统</h3><p class='p'>操作系统包括单用户单任务操作系统、单用户多任务操作系统、多用户多任务操作系统、桌面操作系统、网络操作系统、人工接口操作系统。经典操作系统包括DOS操作系统、Windows操作系统、UNIX操作系统、Linux操作系统和MAC操作系统。通常情况下，用户程序运行在用户态，OS内核通常运行在系统态。进程控制就是由OS内核实现的。</p><p class='p'>进程与线程的区别：进程是资源分配和调度的独立单元，线程是CPU调度的基本单元；一个进程可以包含多个线程，线程也可以创建或撤消另一个线程，线程共享整个进程的资源，一个进程至少包括一个线程；线程创建和销毁所需时间少。一个进程只有一次新状态和终止状态，但可有多次就绪状态、阻塞状态和执行状态。同一个进程的线程之间可以并发执行，线程之间相互制约，也呈现间断性（异步性），因此，线程也同样拥有就绪、阻塞和执行三种基本状态，有的系统中还有终止状态。</p><p class='p'>进程间通信（IPC）方式：管道、信号量、消息队列、共享内存。共享内存效率最高，不需要数据拷贝；共享内存原理：将一份物理内存映射到不同进程各自的虚拟地址空间中，这样每个进程可以读取同一份数据，从而实现进程间通信。</p><p class='p'>线程间通信方式：全局变量、消息、事件。线程间同步方式：临界区、互斥量、信号量、事件。</p><p class='p'>死锁：两个或两个以上的进程在执行过程中由于资源竞争或彼此通信导致的阻塞现象，若无外力作用，这些进程将永远互相等待。死锁产生条件：互斥条件、请求和保持条件、不剥夺条件、环路等待条件。</p><p class='p'>银行家算法：避免死锁。算法原理：先预分配资源-&gt;采用安全性算法判断是否处于系统是否安全状态（依次查看剩余资源是否可以使得队列中）-&gt;决定分配还是回收资源。</p><h3 class='h3'>三、计算机网络</h3><p class='p'>互联网协议按照功能不同分为osi七层或tcp/ip五层或tcp/ip四层。</p><p class='p'>应用层：http，ftp，可以自定义协议。</p><p class='p'>传输层：tcp/udp协议：数据段；head+data：head放源端口，目标端口；端口在本机唯一即可。</p><p class='p'>网络层：ip协议：数据包；head+data：head放源ip地址，目标ip地址；ip地址的通信=》路由协议。ip地址和子网掩码运算构成子网地址相同，代表处于同一个lan中。</p><p class='p'>数据链路层：ethernet以太网协议：数据帧；head+data，head里放：源mac地址，目标mac地址；基于mac地址的广播的通信方式=》计算机通信基本靠吼。</p><p class='p'>物理层：转换成电信号01010101，然后发送。</p><p class='p'>ARP协议：地址解析协议，根据IP地址获得MAC地址，工作过程如下：查询本地ARP缓存，若存在与对应的IP地址，则直接使用；否则发送广播，包含本主机的IP地址、MAC地址以及目的IP地址；目的主机收到广播并确认与之匹配后，先将数据包中的IP地址和MAC保存到本地ARP高速缓存；目的主机以单播的方式发送包含其MAC地址的数据包给源主机；源主机保存到本地ARP高速缓存。</p><p class='p'>TCP通过序列号、确认机制、重传机制保证可靠交付（不丢失、不重复、按序到达）。TCP的三次握手过程：客户端——服务器端：SYN=1，seq=100；服务器端——客户端：ACK=1，ack=101，SYN=1，seq=200；客户端——服务器端：ACK=1，ack=201。</p><p class='p'>DNS：域名系统，完成域名到IP地址的转换。递归查询：主机—本地服务器—顶级域名服务器—根域名服务器—权限域名服务器——再原路返回；迭代查询：主机—本地服务器—顶级域名服务器、本地—根域名服务器、本地—权限域名服务器。</p><p class='p'>浏览器域名解析过程：浏览器通过DNS解析域名，得到IP地址；三次握手建立TCP连接；客户端发起HTTP请求；服务器端响应并返回数据；四次挥手释放TCP连接；浏览器解析数据并显示。</p><p class='p'>GET和POST区别：GET：参数直接url；有长度限制；一个数据包；不安全。POST：Request Body；无限制；两个数据包；安全。</p><h3 class='h3'>四、计算机数据结构与算法</h3><p class='p'>数据结构是计算机存储、组织数据的方式，指相互之间存在一种或多种特定关系的数据元素的集合。算法简单来说就是解决问题的步骤。</p><p class='p'><b>1、数组</b></p><p class='p'>数组是可以在内存中连续存储多个元素的结构，在内存中的分配也是连续的，数组中的元素通过数组下标进行访问，数组下标从0开始。优点：按照索引查询元素速度快；按照索引遍历数组方便。缺点：数组的大小固定后就无法扩容了；数组只能存储一种类型的数据；添加，删除的操作慢，因为要移动其他的元素。适用场景：频繁查询，对存储空间要求不大，很少增加和删除的情况。</p><p class='p'><b>2、栈</b></p><p class='p'>栈是一种特殊的线性表，仅能在线性表的一端操作，栈顶允许操作，栈底不允许操作。 栈的特点是：先进后出，或者说是后进先出，从栈顶放入元素的操作叫入栈，取出元素叫出栈。栈的结构就像一个集装箱，越先放进去的东西越晚才能拿出来，所以，栈常应用于实现递归功能方面的场景，例如斐波那契数列。</p><p class='p'><b>3、队列</b></p><p class='p'>队列与栈一样，也是一种线性表，不同的是，队列可以在一端添加元素，在另一端取出元素，也就是：先进先出。从一端放入元素的操作称为入队，取出元素为出队。使用场景：因为队列先进先出的特点，在多线程阻塞队列管理中非常适用。</p><p class='p'><b>4、链表</b></p><p class='p'>链表是物理存储单元上非连续的、非顺序的存储结构，数据元素的逻辑顺序是通过链表的指针地址实现，每个元素包含两个结点，一个是存储元素的数据域 (内存空间)，另一个是指向下一个结点地址的指针域。根据指针的指向，链表能形成不同的结构，例如单链表，双向链表，循环链表等。链表的优点：链表是很常用的一种数据结构，不需要初始化容量，可以任意加减元素；添加或者删除元素时只需要改变前后两个元素结点的指针域指向地址即可，所以添加，删除很快。缺点：因为含有大量的指针域，占用空间较大；查找元素需要遍历链表来查找，非常耗时。适用场景：数据量较小，需要频繁增加，删除操作的场景。</p><p class='p'><b>5、树</b></p><p class='p'>树是一种数据结构，它是由n（n&gt;=1）个有限节点组成一个具有层次关系的集合。把它叫做 “树” 是因为它看起来像一棵倒挂的树，也就是说它是根朝上，而叶朝下的。它具有以下的特点：每个节点有零个或多个子节点；没有父节点的节点称为根节点；每一个非根节点有且只有一个父节点；除了根节点外，每个子节点可以分为多个不相交的子树。</p><p class='p'>在日常的应用中，我们讨论和用的更多的是树的其中一种结构，就是二叉树。二叉树是树的特殊一种，具有如下特点：每个结点最多有两颗子树，结点的度最大为2；左子树和右子树是有顺序的，次序不能颠倒；即使某结点只有一个子树，也要区分左右子树。二叉树是一种比较有用的折中方案，它添加，删除元素都很快，并且在查找方面也有很多的算法优化，所以，二叉树既有链表的好处，也有数组的好处，是两者的优化方案，在处理大批量的动态数据方面非常有用。</p><p class='p'>二叉树有很多扩展的数据结构，包括平衡二叉树、红黑树、B+树等，这些数据结构二叉树的基础上衍生了很多的功能，在实际应用中广泛用到，例如mysql的数据库索引结构用的就是B+树，还有HashMap的底层源码中用到了红黑树。</p><p class='p'><b>6、散列表</b></p><p class='p'>散列表，也叫哈希表，是根据关键码和值 (key和value) 直接进行访问的数据结构，通过key和value来映射到集合中的一个位置，这样就可以很快找到集合中的对应元素。</p><p class='p'>记录的存储位置=f(key)，这里的对应关系 f 成为散列函数，又称为哈希 (hash函数)，而散列表就是把Key通过一个固定的算法函数既所谓的哈希函数转换成一个整型数字，然后就将该数字对数组长度进行取余，取余结果就当作数组的下标，将value存储在以该数字为下标的数组空间里，这种存储空间可以充分利用数组的查找优势来查找元素，所以查找的速度很快。</p><p class='p'>哈希表在应用中也是比较常见的，就如Java中有些集合类就是借鉴了哈希原理构造的，例如HashMap，HashTable等，利用hash表的优势，对于集合的查找元素时非常方便的，然而，因为哈希表是基于数组衍生的数据结构，在添加删除元素方面是比较慢的，所以很多时候需要用到一种数组链表来做，也就是拉链法。拉链法是数组结合链表的一种结构，较早前的hashMap底层的存储就是采用这种结构，直到jdk1.8之后才换成了数组加红黑树的结构。哈希表的应用场景很多，当然也有很多问题要考虑，比如哈希冲突的问题，如果处理的不好会浪费大量的时间，导致应用崩溃。</p><p class='p'><b>7、堆</b></p><p class='p'>堆是一种比较特殊的数据结构，可以被看做一棵树的数组对象，具有以下的性质：堆中某个节点的值总是不大于或不小于其父节点的值；堆总是一棵完全二叉树。将根节点最大的堆叫做最大堆或大根堆，根节点最小的堆叫做最小堆或小根堆。常见的堆有二叉堆、斐波那契堆等。堆的定义如下：n个元素的序列{k1,k2,ki,…,kn}当且仅当满足下关系时，称之为堆。(ki &lt;= k2i,ki &lt;= k2i+1)或者(ki &gt;= k2i,ki &gt;= k2i+1), (i = 1,2,3,4…n/2)，满足前者的表达式的成为小顶堆，满足后者表达式的为大顶堆，这两者的结构图可以用完全二叉树排列出来。因为堆有序的特点，一般用来做数组中的排序，称为堆排序。</p><p class='p'><b>8、图</b></p><p class='p'>图是由结点的有穷集合V和边的集合E组成。其中，为了与树形结构加以区别，在图结构中常常将结点称为顶点，边是顶点的有序偶对，若两个顶点之间存在一条边，就表示这两个顶点具有相邻关系。按照顶点指向的方向可分为无向图和有向图。图是一种比较复杂的数据结构，在存储数据上有着比较复杂和高效的算法，分别有邻接矩阵 、邻接表、十字链表、邻接多重表、边集数组等存储结构。</p>"

    },
    {
      "id": 2,
      "lis": "技能",
      "title": "IT篇@信息采集",
      "author": "Elaine",
      "html": "<h3 class='h3'>Python自带标准库urllib</h3>&#10<div class='card'><p class='line-numbers'><code class='  language-python'><span class='token comment'>#urllib.parse 用于解析url</span>&#10<span class='token keyword'>import</span> urllib<span class='token punctuation'>.</span>parse&#10kw<span class='token operator'>=</span><span class='token punctuation'>&#123</span><span class='token string'>'wd'</span><span class='token punctuation'>:</span><span class='token string'>'*'</span><span class='token punctuation'>&#125</span>&#10<span class='token comment'>#编码</span>&#10result<span class='token operator'>=</span>urllib<span class='token punctuation'>.</span>parse<span class='token punctuation'>.</span>urlencode<span class='token punctuation'>(</span>kw<span class='token punctuation'>)</span>&#10<span class='token keyword'>print</span><span class='token punctuation'>(</span>result<span class='token punctuation'>)</span> &#10<span class='token comment'>#解码</span>&#10res<span class='token operator'>=</span>urllib<span class='token punctuation'>.</span>parse<span class='token punctuation'>.</span>unquote<span class='token punctuation'>(</span>result<span class='token punctuation'>)</span>&#10<span class='token keyword'>print</span><span class='token punctuation'>(</span>res<span class='token punctuation'>)</span>&#10<span aria-hidden='true' class='line-numbers-rows'><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span></span></code></p></div>&#10<div class='card'><p class='line-numbers'><code class='  language-python'><span class='token comment'>#urllib.request 用于打开和读取URL</span>&#10<span class='token keyword'>import</span> urllib<span class='token punctuation'>.</span>request&#10<span class='token keyword'>import</span> urllib<span class='token punctuation'>.</span>parse&#10url<span class='token operator'>=</span><span class='token string'>'*'</span>&#10headers<span class='token operator'>=</span><span class='token punctuation'>&#123</span><span class='token string'>'User-Agent'</span><span class='token punctuation'>:</span><span class='token string'>'*'</span><span class='token punctuation'>&#125</span>&#10data<span class='token operator'>=</span><span class='token punctuation'>&#123</span><span class='token string'>'username'</span><span class='token punctuation'>:</span><span class='token string'>'*'</span><span class='token punctuation'>&#44</span><span class='token string'>'password'</span><span class='token punctuation'>:</span><span class='token string'>'*'</span><span class='token punctuation'>&#44</span><span class='token string'>'action'</span><span class='token punctuation'>:</span><span class='token string'>'login'</span><span class='token punctuation'>&#125</span>&#10<span class='token comment'>#1.发送请求</span>&#10resp<span class='token operator'>=</span>urllib<span class='token punctuation'>.</span>request<span class='token punctuation'>.</span>urlopen<span class='token punctuation'>(</span>url<span class='token punctuation'>&#44</span>data<span class='token operator'>=</span><span class='token builtin'>bytes</span><span class='token punctuation'>(</span>urllib<span class='token punctuation'>.</span>parse<span class='token punctuation'>.</span>urlencode<span class='token punctuation'>(</span>data<span class='token punctuation'>)</span><span class='token punctuation'>&#44</span>encoding<span class='token operator'>=</span><span class='token string'>'utf-8'</span><span class='token punctuation'>)</span><span class='token punctuation'>)</span>&#10html<span class='token operator'>=</span>resp<span class='token punctuation'>.</span>read<span class='token punctuation'>(</span><span class='token punctuation'>)</span><span class='token punctuation'>.</span>decode<span class='token punctuation'>(</span><span class='token string'>'gbk'</span><span class='token punctuation'>)</span> <span class='token comment'>#decode将bytes类型转成str类型</span>&#10<span class='token keyword'>print</span><span class='token punctuation'>(</span>html<span class='token punctuation'>)</span>&#10<span class='token comment'>#2.构建请求对象</span>&#10req<span class='token operator'>=</span>urllib<span class='token punctuation'>.</span>request<span class='token punctuation'>.</span>Request<span class='token punctuation'>(</span>url<span class='token punctuation'>&#44</span>headers<span class='token operator'>=</span>headers<span class='token punctuation'>)</span>&#10<span class='token comment'>#使用urlopen打开请求</span>&#10resp<span class='token operator'>=</span>urllib<span class='token punctuation'>.</span>request<span class='token punctuation'>.</span>urlopen<span class='token punctuation'>(</span>req<span class='token punctuation'>)</span>&#10<span class='token comment'>#从响应结果中读取数据</span>&#10html<span class='token operator'>=</span>resp<span class='token punctuation'>.</span>read<span class='token punctuation'>(</span><span class='token punctuation'>)</span><span class='token punctuation'>.</span>decode<span class='token punctuation'>(</span><span class='token string'>'utf-8'</span><span class='token punctuation'>)</span>&#10<span class='token keyword'>print</span><span class='token punctuation'>(</span>html<span class='token punctuation'>)</span>&#10<span aria-hidden='true' class='line-numbers-rows'><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span></span></code></p></div>&#10<div class='card'><p class='line-numbers'><code class='  language-python'><span class='token comment'>#https://www.xicidaili.com/nn/ 用于免费代理IP</span>&#10<span class='token keyword'>from</span> urllib<span class='token punctuation'>.</span>request <span class='token keyword'>import</span> build_opener&#10<span class='token keyword'>from</span> urllib<span class='token punctuation'>.</span>request <span class='token keyword'>import</span> ProxyHandler&#10proxy<span class='token operator'>=</span>ProxyHandler<span class='token punctuation'>(</span><span class='token punctuation'>&#123</span><span class='token string'>'https'</span><span class='token punctuation'>:</span><span class='token string'>'*(IP地址):*(端口号)'</span><span class='token punctuation'>&#125</span><span class='token punctuation'>)</span>&#10opener<span class='token operator'>=</span>build_opener<span class='token punctuation'>(</span>proxy<span class='token punctuation'>)</span>&#10url<span class='token operator'>=</span><span class='token string'>'*'</span>&#10resp<span class='token operator'>=</span>opener<span class='token punctuation'>.</span><span class='token builtin'>open</span><span class='token punctuation'>(</span>url<span class='token punctuation'>)</span>&#10<span class='token keyword'>print</span><span class='token punctuation'>(</span>resp<span class='token punctuation'>.</span>read<span class='token punctuation'>(</span><span class='token punctuation'>)</span><span class='token punctuation'>.</span>decode<span class='token punctuation'>(</span><span class='token string'>'utf-8'</span><span class='token punctuation'>)</span><span class='token punctuation'>)</span>&#10<span aria-hidden='true' class='line-numbers-rows'><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span></span></code></p></div>&#10<div class='card'><p class='line-numbers'><code class='  language-python'><span class='token comment'>#cookie 用于解决http的无状态性</span>&#10<span class='token keyword'>import</span> urllib<span class='token punctuation'>.</span>request&#10<span class='token keyword'>from</span> http <span class='token keyword'>import</span> cookiejar&#10filename<span class='token operator'>=</span><span class='token string'>'cookie.txt'</span>&#10<span class='token comment'>#获取cookie</span>&#10<span class='token keyword'>def</span> <span class='token function'>get_cookie</span><span class='token punctuation'>(</span><span class='token punctuation'>)</span><span class='token punctuation'>:</span>&#10    cookie<span class='token operator'>=</span>cookiejar<span class='token punctuation'>.</span>MozillaCookieJar<span class='token punctuation'>(</span>filename<span class='token punctuation'>)</span> <span class='token comment'>#实例化一个MozillaCookieJar 用于保存cookie</span>&#10    handler<span class='token operator'>=</span>urllib<span class='token punctuation'>.</span>request<span class='token punctuation'>.</span>HTTPCookieProcessor<span class='token punctuation'>(</span>cookie<span class='token punctuation'>)</span> <span class='token comment'>#创建handler对象</span>&#10    opener<span class='token operator'>=</span>urllib<span class='token punctuation'>.</span>request<span class='token punctuation'>.</span>build_opener<span class='token punctuation'>(</span>handler<span class='token punctuation'>)</span> <span class='token comment'>#创建opener对象</span>&#10    url<span class='token operator'>=</span><span class='token string'>'*'</span>&#10    resp<span class='token operator'>=</span>opener<span class='token punctuation'>.</span><span class='token builtin'>open</span><span class='token punctuation'>(</span>url<span class='token punctuation'>)</span> <span class='token comment'>#请求网址</span>&#10    cookie<span class='token punctuation'>.</span>save<span class='token punctuation'>(</span><span class='token punctuation'>)</span> <span class='token comment'>#存储cookie文件</span>&#10<span class='token comment'>#读取cookie</span>&#10<span class='token keyword'>def</span> <span class='token function'>use_cookie</span><span class='token punctuation'>(</span><span class='token punctuation'>)</span><span class='token punctuation'>:</span>&#10    cookie<span class='token operator'>=</span>cookiejar<span class='token punctuation'>.</span>MozillaCookieJar<span class='token punctuation'>(</span><span class='token punctuation'>)</span> <span class='token comment'>#实例化MozillaCookieJar</span>&#10    cookie<span class='token punctuation'>.</span>load<span class='token punctuation'>(</span>filename<span class='token punctuation'>)</span> <span class='token comment'>#加载cookie文件</span>&#10    <span class='token keyword'>print</span><span class='token punctuation'>(</span>cookie<span class='token punctuation'>)</span>&#10<span class='token keyword'>if</span> __name__<span class='token operator'>==</span><span class='token string'>'__main__'</span><span class='token punctuation'>:</span>&#10    get_cookie<span class='token punctuation'>(</span><span class='token punctuation'>)</span>&#10    use_cookie<span class='token punctuation'>(</span><span class='token punctuation'>)</span>&#10<span aria-hidden='true' class='line-numbers-rows'><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span></span></code></p></div>&#10<div class='card'><p class='line-numbers'><code class='  language-python'>#urllib<span class='token punctuation'>.</span>error<span class='token punctuation'>.</span><span class='token builtin'>URLError</span> 用于捕获由urllib<span class='token punctuation'>.</span>request产生的异常&#10<span class='token keyword'>import</span> urllib<span class='token punctuation'>.</span>request&#10<span class='token keyword'>import</span> urllib<span class='token punctuation'>.</span>error&#10url<span class='token operator'>=</span>'<span class='token operator'>*</span>’&#10<span class='token keyword'>try</span>&#10    resp<span class='token operator'>=</span>urllib<span class='token punctuation'>.</span>request<span class='token punctuation'>.</span><span class='token function'>urlopen</span><span class='token punctuation'>(</span>url<span class='token punctuation'>)</span>&#10except urllib<span class='token punctuation'>.</span>error<span class='token punctuation'>.</span><span class='token builtin'>URLError</span> <span class='token keyword'>as</span> e&#10    <span class='token function'>print</span><span class='token punctuation'>(</span>e<span class='token punctuation'>.</span>reason<span class='token punctuation'>)</span>&#10<span aria-hidden='true' class='line-numbers-rows'><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span></span></code></p></div>&#10<div class='card'><p class='line-numbers'><code class='  language-python'>#urllib<span class='token punctuation'>.</span>error<span class='token punctuation'>.</span><span class='token builtin'>HTTPError</span> 用于处理<span class='token constant'>HTTP</span>与<span class='token constant'>HTTPS</span>请求的错误&#10<span class='token keyword'>import</span> urllib<span class='token punctuation'>.</span>request&#10<span class='token keyword'>import</span> urllib<span class='token punctuation'>.</span>error&#10url<span class='token operator'>=</span>'<span class='token operator'>*</span>’&#10<span class='token keyword'>try</span>&#10    resp<span class='token operator'>=</span>urllib<span class='token punctuation'>.</span>request<span class='token punctuation'>.</span><span class='token function'>urlopen</span><span class='token punctuation'>(</span>url<span class='token punctuation'>)</span>&#10except urllib<span class='token punctuation'>.</span>error<span class='token punctuation'>.</span><span class='token builtin'>HTTPError</span> <span class='token keyword'>as</span> e&#10    <span class='token function'>print</span><span class='token punctuation'>(</span><span class='token string'>'原因:'</span><span class='token punctuation'>&#44</span>e<span class='token punctuation'>.</span>reason<span class='token punctuation'>)</span>&#10    <span class='token function'>print</span><span class='token punctuation'>(</span><span class='token string'>'响应状态码:'</span><span class='token punctuation'>&#44</span><span class='token function'>str</span><span class='token punctuation'>(</span>e<span class='token punctuation'>.</span>code<span class='token punctuation'>)</span><span class='token punctuation'>)</span>&#10    <span class='token function'>print</span><span class='token punctuation'>(</span><span class='token string'>'响应头数据:'</span><span class='token punctuation'>&#44</span>e<span class='token punctuation'>.</span>headers<span class='token punctuation'>)</span>&#10<span aria-hidden='true' class='line-numbers-rows'><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span></span></code></p></div>&#10<h3 class='h3'>第三方requests库</h3>&#10<div class='card'><p class='line-numbers'><code class='  language-python'><span class='token comment'>#requests.get() 用于发送get请求</span>&#10<span class='token keyword'>import</span> requests&#10url<span class='token operator'>=</span>'<span class='token operator'>*</span>’&#10params<span class='token operator'>=</span><span class='token punctuation'>&#91</span><span class='token string'>'*'</span><span class='token punctuation'>:</span><span class='token string'>'*'</span><span class='token punctuation'>&#93</span>&#10resp<span class='token operator'>=</span>requests<span class='token punctuation'>.</span>get<span class='token punctuation'>(</span>url<span class='token punctuation'>&#44</span>params<span class='token operator'>=</span>params<span class='token punctuation'>)</span>&#10&#10resp<span class='token punctuation'>.</span>encoding<span class='token operator'>=</span><span class='token string'>'utf-8'</span> <span class='token comment'>#设置响应的编码格式</span>&#10cookie<span class='token operator'>=</span>resp<span class='token punctuation'>.</span>cookies <span class='token comment'>#获取请求后的cookie信息</span>&#10headers<span class='token operator'>=</span>resp<span class='token punctuation'>.</span>headers&#10print<span class='token punctuation'>(</span><span class='token string'>'响应状态码:'</span><span class='token punctuation'>&#44</span>resp<span class='token punctuation'>.</span>status_code<span class='token punctuation'>)</span>&#10print<span class='token punctuation'>(</span><span class='token string'>'请求后的cookie:'</span><span class='token punctuation'>&#44</span>cookie&#10print<span class='token punctuation'>(</span><span class='token string'>'获取请求的网址:'</span><span class='token punctuation'>&#44</span>resp<span class='token punctuation'>.</span>url<span class='token punctuation'>)</span>&#10print<span class='token punctuation'>(</span><span class='token string'>'响应头:'</span><span class='token punctuation'>&#44</span>headers<span class='token punctuation'>)</span>&#10print<span class='token punctuation'>(</span><span class='token string'>'响应内容:'</span><span class='token punctuation'>&#44</span>resp<span class='token punctuation'>.</span>text<span class='token punctuation'>)</span>&#10&#10json_data<span class='token operator'>=</span>resp<span class='token punctuation'>.</span>json<span class='token punctuation'>(</span><span class='token punctuation'>)</span> <span class='token comment'>#获取json数据</span>&#10print<span class='token punctuation'>(</span>json_data<span class='token punctuation'>)</span>&#10&#10with open<span class='token punctuation'>(</span><span class='token string'>'*'</span><span class='token punctuation'>&#44</span><span class='token string'>'wb'</span><span class='token punctuation'>)</span> as file <span class='token comment'>#存储二进制数据</span>&#10    file<span class='token punctuation'>.</span>write<span class='token punctuation'>(</span>resp<span class='token punctuation'>.</span>content<span class='token punctuation'>)</span>&#10&#10session<span class='token operator'>=</span>requests<span class='token punctuation'>.</span>session<span class='token punctuation'>(</span><span class='token punctuation'>)</span> <span class='token comment'>#使用session</span>&#10resp<span class='token operator'>=</span>session<span class='token punctuation'>.</span>get<span class='token punctuation'>(</span>url<span class='token punctuation'>)</span>&#10resp<span class='token punctuation'>.</span>encoding<span class='token operator'>=</span>'utf<span class='token operator'>-</span><span class='token number'>8</span>’&#10print<span class='token punctuation'>(</span>resp<span class='token punctuation'>.</span>text<span class='token punctuation'>)</span>&#10<span aria-hidden='true' class='line-numbers-rows'><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span></span></code></p></div>&#10<div class='card'><p class='line-numbers'><code class='  language-python'>#requests.post() 用于发送post请求&#10<span class='token keyword'>import</span> requests&#10url<span class='token operator'>=</span>'<span class='token operator'>*</span>'&#10data<span class='token operator'>=</span>&#123'username':'*'&#44'password':'*'&#44'action':'login'&#125&#10resp<span class='token operator'>=</span>requests.post(url&#44data=data)&#10resp.encoding<span class='token operator'>=</span><span class='token string'>'gb2312’</span>&#10print(resp.status_code)&#10print(resp.text)&#10&#10session<span class='token operator'>=</span>requests.session() #使用session&#10resp<span class='token operator'>=</span>session.post(url&#44data=data)&#10resp.encoding<span class='token operator'>=</span><span class='token string'>'gb2312’</span>&#10print(resp.text)&#10<span aria-hidden='true' class='line-numbers-rows'><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span></span></code></p></div>&#10<h3 class='h3'>第三方库XPath</h3>&#10<div class='card'><p class='line-numbers'><code class='  language-python'><span class='token comment'>#XPath 用于提取数据</span>&#10<span class='token keyword'>import</span> requests&#10<span class='token keyword'>from</span> lxml <span class='token keyword'>import</span> etree&#10url<span class='token operator'>=</span><span class='token string'>'*'</span>&#10headers<span class='token operator'>=</span><span class='token punctuation'>&#123</span><span class='token string'>'User-Agent'</span><span class='token punctuation'>:</span><span class='token string'>'*'</span><span class='token punctuation'>&#125</span>&#10resp<span class='token operator'>=</span>requests<span class='token punctuation'>.</span>get<span class='token punctuation'>(</span>url<span class='token punctuation'>&#44</span>headers<span class='token punctuation'>)</span> <span class='token comment'>#发送请求</span>&#10e<span class='token operator'>=</span>etree<span class='token punctuation'>.</span>HTML<span class='token punctuation'>(</span>resp<span class='token punctuation'>.</span>text<span class='token punctuation'>)</span> <span class='token comment'>#将str类型转换成class 'lxml.etree._Element'(print(type(e)))</span>&#10e1<span class='token operator'>=</span>e<span class='token punctuation'>.</span>xpath<span class='token punctuation'>(</span><span class='token string'>'//*节点名&#91last()-1&#93/text()'</span><span class='token punctuation'>)</span>&#10e2<span class='token operator'>=</span>e<span class='token punctuation'>.</span>xpath<span class='token punctuation'>(</span><span class='token string'>'//*节点名&#91@*属性='*'&#93/text()'</span><span class='token punctuation'>)</span> &#10<span class='token keyword'>for</span> e1<span class='token punctuation'>&#44</span>e2 <span class='token keyword'>in</span> <span class='token builtin'>zip</span><span class='token punctuation'>(</span>e1<span class='token punctuation'>&#44</span>e2<span class='token punctuation'>)</span>&#10    <span class='token keyword'>print</span><span class='token punctuation'>(</span>e1<span class='token punctuation'>&#44</span><span class='token string'>':'</span><span class='token punctuation'>&#44</span>e2<span class='token punctuation'>)</span>&#10<span aria-hidden='true' class='line-numbers-rows'><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span></span></code></p></div>&#10<h3 class='h3'>第三方库BeautifulSoup</h3>&#10<div class='card'><p class='line-numbers'><code class='  language-python'><span class='token comment'>#BeautifulSoup 用于提取数据</span>&#10<span class='token keyword'>from</span> bs4 <span class='token keyword'>import</span> BeautifulSoup&#10html<span class='token operator'>=</span><span class='token triple-quoted-string string'>'''&#10    &lt;html&gt;&#10        &lt;head&gt;&#10            &lt;title&gt;*&lt;/title&gt;&#10        &lt;/head&gt;&#10        &lt;body&gt;&#10             &lt;h1 class='*'&gt;*&lt;/h1&gt;&#10             &#10        &lt;/body&gt;&#10    &lt;/html&gt;&#10'''</span>&#10bs<span class='token operator'>=</span>BeautifulSoup<span class='token punctuation'>(</span>html<span class='token punctuation'>&#44</span><span class='token string'>'html.parser'</span><span class='token punctuation'>)</span>&#10bs<span class='token operator'>=</span>BeautifulSoup<span class='token punctuation'>(</span>html<span class='token punctuation'>&#44</span><span class='token string'>'lxml'</span><span class='token punctuation'>)</span>&#10<span class='token keyword'>print</span><span class='token punctuation'>(</span>bs<span class='token punctuation'>.</span>title<span class='token punctuation'>)</span> <span class='token comment'>#获取标签</span>&#10<span class='token keyword'>print</span><span class='token punctuation'>(</span>bs<span class='token punctuation'>.</span>h1<span class='token punctuation'>.</span>attrs<span class='token punctuation'>)</span> <span class='token comment'>#获取h1标签的所有属性</span>&#10&#10<span class='token comment'>#获取单个属性</span>&#10<span class='token keyword'>print</span><span class='token punctuation'>(</span>bs<span class='token punctuation'>.</span>h1<span class='token punctuation'>.</span>get<span class='token punctuation'>(</span><span class='token string'>'class'</span><span class='token punctuation'>)</span><span class='token punctuation'>)</span>&#10<span class='token keyword'>print</span><span class='token punctuation'>(</span>bs<span class='token punctuation'>.</span>h1<span class='token punctuation'>&#91</span><span class='token string'>'class'</span><span class='token punctuation'>&#93</span><span class='token punctuation'>)</span>&#10&#10<span class='token comment'>#获取文本内容</span>&#10<span class='token keyword'>print</span><span class='token punctuation'>(</span>bs<span class='token punctuation'>.</span>title<span class='token punctuation'>.</span>text<span class='token punctuation'>)</span>&#10<span class='token keyword'>print</span><span class='token punctuation'>(</span>bs<span class='token punctuation'>.</span>title<span class='token punctuation'>.</span>string<span class='token punctuation'>)</span> <span class='token comment'>#获取包括注释内容</span>&#10&#10<span class='token keyword'>print</span><span class='token punctuation'>(</span>bs<span class='token punctuation'>.</span>find<span class='token punctuation'>(</span><span class='token string'>'h1'</span><span class='token punctuation'>&#44</span>class_<span class='token operator'>=</span><span class='token string'>'*'</span><span class='token punctuation'>)</span><span class='token punctuation'>)</span> <span class='token comment'>#获取第一个满足条件的标签</span>&#10<span class='token keyword'>print</span><span class='token punctuation'>(</span>bs<span class='token punctuation'>.</span>find_all<span class='token punctuation'>(</span><span class='token string'>'h1'</span><span class='token punctuation'>&#44</span>class_<span class='token operator'>=</span><span class='token string'>'*'</span><span class='token punctuation'>)</span><span class='token punctuation'>)</span> <span class='token comment'>#获取所有满足条件的标签列表</span>&#10<span class='token keyword'>for</span> item <span class='token keyword'>in</span> bs<span class='token punctuation'>.</span>find_all<span class='token punctuation'>(</span><span class='token string'>'h1'</span><span class='token punctuation'>&#44</span>class_<span class='token operator'>=</span><span class='token string'>'*'</span><span class='token punctuation'>)</span>&#10    <span class='token keyword'>print</span><span class='token punctuation'>(</span>item<span class='token punctuation'>)</span>&#10<span class='token keyword'>print</span><span class='token punctuation'>(</span>bs<span class='token punctuation'>.</span>find_all<span class='token punctuation'>(</span><span class='token string'>'h1'</span><span class='token punctuation'>&#44</span>attrs<span class='token operator'>=</span><span class='token punctuation'>&#123</span><span class='token string'>'class'</span><span class='token punctuation'>:</span><span class='token string'>'*'</span><span class='token punctuation'>&#125</span><span class='token punctuation'>)</span><span class='token punctuation'>)</span>&#10&#10<span class='token comment'>#css选择器</span>&#10<span class='token keyword'>print</span><span class='token punctuation'>(</span>bs<span class='token punctuation'>.</span>select<span class='token punctuation'>(</span><span class='token string'>'#*'</span><span class='token punctuation'>)</span><span class='token punctuation'>)</span>&#10<span class='token keyword'>print</span><span class='token punctuation'>(</span>bs<span class='token punctuation'>.</span>select<span class='token punctuation'>(</span><span class='token string'>'.*'</span><span class='token punctuation'>)</span><span class='token punctuation'>)</span>&#10<span class='token keyword'>print</span><span class='token punctuation'>(</span>bs<span class='token punctuation'>.</span>select<span class='token punctuation'>(</span><span class='token string'>'*&gt;*'</span><span class='token punctuation'>)</span><span class='token punctuation'>)</span>&#10<span class='token keyword'>print</span><span class='token punctuation'>(</span>bs<span class='token punctuation'>.</span>select<span class='token punctuation'>(</span><span class='token string'>'*.*&gt;*'</span><span class='token punctuation'>)</span><span class='token punctuation'>)</span>&#10<span class='token keyword'>for</span> item <span class='token keyword'>in</span> bs<span class='token punctuation'>.</span>select<span class='token punctuation'>(</span><span class='token string'>'*.*&gt;*'</span><span class='token punctuation'>)</span><span class='token punctuation'>:</span>&#10    <span class='token keyword'>print</span><span class='token punctuation'>(</span>item<span class='token punctuation'>.</span>text<span class='token punctuation'>)</span>&#10<span aria-hidden='true' class='line-numbers-rows'><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span><span class='before'></span></span></code></p></div>"
    },
    {
      "id": 3,
      "lis": "技能",
      "title": "数据篇@商业分析",
      "author": "Elaine",
      "html": "<h3 class='h3'>一、必备数据网站</h3><p class='p'><b>1、国家宏观经济：http://www.gov.cn/</b><span class='span'>包括GDP，CPI，社会消费品零售总额等数据</span></p><p class='p'><b>2、国家统计局：http://www.stats.gov.cn/</b><span class='span'>包括年度、季度、月度、地区、部门数据等</span></p><p class='p'><b>3、香港金融管理局：https://www.hkma.gov.hk</b><span class='span'>包括最新的香港经济数据</span></p><p class='p'><b>4、世界银行：https://data.worldbank.org.cn</b><span class='span'>包括各个国家的经济数据</span></p><p class='p'><b>5、CEIC：https://www.ceicdata.com</b><span class='span'>包括各国家数据，含丰富的免费内容</span></p><p class='p'><b>6、巨潮资讯网：http://www.cninfo.com.cn</b><span class='span'>包括新三板上市公司招股说明书等</span></p><p class='p'><b>7、披露易：https://www.hkexnews.hk/index_c.htm</b><span class='span'>包括港股上市公司年报等</span></p><p class='p'><b>8、纳斯达克证券交易所：http://www.nasdaq.com</b><span class='span'>包括美股上市公司招股说明书等</span></p><p class='p'><b>9、199IT大数据导航：http://hao.199it.com/</b><span class='span'>包括大部分生活工作相关数据源，如互联网、实时工具、视频数据、教育数据等</p><h3 class='h3'>二、行业数据网站</h3><p class='p'><b>1、萝卜投研：https://robo.datayes.com</b><span class='span'>包括行业经济数据，财务分析，行业研报等</span></p><p class='p'><b>2、statcounter：https://gs.statcounter.com</b><span class='span'>包括世界各地使用App的份额情况</span></p><p class='p'><b>3、艺恩：https://www.endata.com.cn</b><span class='span'>包括影视行业的相关数据</span></p><p class='p'><b>4、清博大数据：https://www.gsdata.cn</b><span class='span'>包括各平台榜单、热度指数、文章视频数据等</span></p><p class='p'><b>5、飞瓜数据：https://www.feigns.cn</b><span class='span'>包括主流短视频和直播电商平台榜单、达人的热度指数，行业数据报告等</span></p><p class='p'><b>6、新榜：https://www.newrank.cn</b><span class='span'>包括各内容平台最热榜单、内容等</p><h3 class='h3'>三、权威报告网站</h3><p class='p'><b>1、中国报告大厅：http://www.chinabgao.com</b><span class='span'>包括各行业调查、分析、预测等，含丰富的免费内容</span></p><p class='p'><b>2、东方财经网-研报中心：http://data.eastmoney.com/report/</b><span class='span'>包括各行各业的报告、分析等，偏金融，入口为研究&gt;行业&gt;报告<br></span></p><p class='p'><b>3、阿里研究院：http://www.aliresearch.com</b><span class='span'>包括互联网领域分析研究，需注册登陆</span></p><p class='p'><b>4、世界经济论坛：https://cn.weforum.org/</b><span class='span'>包括宏观报告等</span></p><p class='p'><b>5、麦肯锡：https://www.mckinsey.com.cn/</b><span class='span'>包括各行业洞见等</span></p><p class='p'><b>6、贝恩：https://www.bain.cn/</b><span class='span'>包括各行业文章、观点、白皮书等</span></p><p class='p'><b>7、波士顿咨询：https://www.bcg.com/zh-cn/</b><span class='span'>包括各行业洞察等</span></p><p class='p'><b>8、罗兰贝格管理咨询：https://www.rolandberger.com/zh/</b><span class='span'>包括科技行业研究报告等</span></p><p class='p'><b>9、</b><b>艾瑞网：https://www.iresearch.cn/</b><span class='span'>包括互联网行业报告，文章等</span></p><p class='p'><b>10、36氪研究院：https://36kr.com/academe.html</b><span class='span'>包括各行业和一些小众行业的报告</p>"

    }
  ]
}
